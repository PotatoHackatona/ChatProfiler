/**
 * API Crédito Pessoal - Demo
 * API para tratamento de propostas de crédito pessoal utilizada para estudos do fluxo de crédito da Portocred
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Body2', 'model/Error', 'model/ErrorValidation', 'model/InlineResponse2006', 'model/InlineResponse2007', 'model/InlineResponse2008'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/Body2'), require('../model/Error'), require('../model/ErrorValidation'), require('../model/InlineResponse2006'), require('../model/InlineResponse2007'), require('../model/InlineResponse2008'));
  } else {
    // Browser globals (root is window)
    if (!root.ApiCrditoPessoalDemo) {
      root.ApiCrditoPessoalDemo = {};
    }
    root.ApiCrditoPessoalDemo.ContratosApi = factory(root.ApiCrditoPessoalDemo.ApiClient, root.ApiCrditoPessoalDemo.Body2, root.ApiCrditoPessoalDemo.Error, root.ApiCrditoPessoalDemo.ErrorValidation, root.ApiCrditoPessoalDemo.InlineResponse2006, root.ApiCrditoPessoalDemo.InlineResponse2007, root.ApiCrditoPessoalDemo.InlineResponse2008);
  }
}(this, function(ApiClient, Body2, Error, ErrorValidation, InlineResponse2006, InlineResponse2007, InlineResponse2008) {
  'use strict';

  /**
   * Contratos service.
   * @module api/ContratosApi
   * @version 1.0.0
   */

  /**
   * Constructs a new ContratosApi. 
   * @alias module:api/ContratosApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the contratosContratoCancelamentoPatch operation.
     * @callback module:api/ContratosApi~contratosContratoCancelamentoPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2008} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Cancela um contrato.
     * @param {String} clientId 
     * @param {Number} contrato Número do contrato que deseja cancelar
     * @param {module:api/ContratosApi~contratosContratoCancelamentoPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2008}
     */
    this.contratosContratoCancelamentoPatch = function(clientId, contrato, callback) {
      var postBody = null;

      // verify the required parameter 'clientId' is set
      if (clientId === undefined || clientId === null) {
        throw new Error("Missing the required parameter 'clientId' when calling contratosContratoCancelamentoPatch");
      }

      // verify the required parameter 'contrato' is set
      if (contrato === undefined || contrato === null) {
        throw new Error("Missing the required parameter 'contrato' when calling contratosContratoCancelamentoPatch");
      }


      var pathParams = {
        'contrato': contrato
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'client_id': clientId
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = InlineResponse2008;

      return this.apiClient.callApi(
        '/contratos/{contrato}/cancelamento', 'PATCH',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the contratosContratoPagamentoPatch operation.
     * @callback module:api/ContratosApi~contratosContratoPagamentoPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2007} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Registra o pagamento de uma parcela do contrato.
     * @param {String} clientId 
     * @param {Number} contrato Número do contrato que receberá o pagamento
     * @param {module:model/Body2} body 
     * @param {module:api/ContratosApi~contratosContratoPagamentoPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2007}
     */
    this.contratosContratoPagamentoPatch = function(clientId, contrato, body, callback) {
      var postBody = body;

      // verify the required parameter 'clientId' is set
      if (clientId === undefined || clientId === null) {
        throw new Error("Missing the required parameter 'clientId' when calling contratosContratoPagamentoPatch");
      }

      // verify the required parameter 'contrato' is set
      if (contrato === undefined || contrato === null) {
        throw new Error("Missing the required parameter 'contrato' when calling contratosContratoPagamentoPatch");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling contratosContratoPagamentoPatch");
      }


      var pathParams = {
        'contrato': contrato
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'client_id': clientId
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = InlineResponse2007;

      return this.apiClient.callApi(
        '/contratos/{contrato}/pagamento', 'PATCH',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the contratosContratoParcelasNumeroParcelaBoletoGet operation.
     * @callback module:api/ContratosApi~contratosContratoParcelasNumeroParcelaBoletoGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/InlineResponse2006>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gerar o boleto da parcela indicada
     * @param {String} clientId 
     * @param {Number} contrato Número do contrato
     * @param {Number} numeroParcela Número da parcela
     * @param {module:api/ContratosApi~contratosContratoParcelasNumeroParcelaBoletoGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/InlineResponse2006>}
     */
    this.contratosContratoParcelasNumeroParcelaBoletoGet = function(clientId, contrato, numeroParcela, callback) {
      var postBody = null;

      // verify the required parameter 'clientId' is set
      if (clientId === undefined || clientId === null) {
        throw new Error("Missing the required parameter 'clientId' when calling contratosContratoParcelasNumeroParcelaBoletoGet");
      }

      // verify the required parameter 'contrato' is set
      if (contrato === undefined || contrato === null) {
        throw new Error("Missing the required parameter 'contrato' when calling contratosContratoParcelasNumeroParcelaBoletoGet");
      }

      // verify the required parameter 'numeroParcela' is set
      if (numeroParcela === undefined || numeroParcela === null) {
        throw new Error("Missing the required parameter 'numeroParcela' when calling contratosContratoParcelasNumeroParcelaBoletoGet");
      }


      var pathParams = {
        'contrato': contrato,
        'numero-parcela': numeroParcela
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'client_id': clientId
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = [InlineResponse2006];

      return this.apiClient.callApi(
        '/contratos/{contrato}/parcelas/{numero-parcela}/boleto', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
